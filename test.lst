     1                                   
     2                                  ;TEXT SECTION
     3                                   
     4                                  global main
     5                                   
     6                                  			section			.txt
     7                                   
     8                                  			extern			printf
     9                                   
    10 00000000 90                      main:		nop										;main PROC
    11 00000001 55                      			push			rbp
    12 00000002 4889E5                  			mov				rbp,rsp
    13 00000005 6A03                    			push			3						;emit numbers
    14 00000007 8F0425[00000000]        			pop				qword [A]				;print assignments
    15 0000000E 6A04                    			push			4						;emit numbers
    16 00000010 8F0425[08000000]        			pop				qword [B]				;print assignments
    17 00000017 6A03                    			push			3						;emit numbers
    18 00000019 8F0425[18000000]        			pop				qword [D]				;print assignments
    19 00000020 FF3425[00000000]        			push			qword [A]				;print identifiers
    20 00000027 FF3425[08000000]        			push			qword [B]				;print identifiers
    21 0000002E 5B                      			pop				rbx						;print multiplcation/division
    22 0000002F 58                      			pop				rax
    23 00000030 BA00000000              			mov				rdx,0					;move a 0 into rdx
    24 00000035 480FAFC3                			imul			rax,rbx					;multiply the two register
    25 00000039 50                      			push			rax
    26 0000003A FF3425[00000000]        			push			qword [A]				;print identifiers
    27 00000041 FF3425[18000000]        			push			qword [D]				;print identifiers
    28 00000048 5B                      			pop				rbx						;print addition ops
    29 00000049 58                      			pop				rax
    30 0000004A 4801D8                  			add				rax,rbx					;adds the contents of rax and rbx
    31 0000004D 50                      			push			rax
    32 0000004E 5B                      			pop				rbx						;print multiplcation/division
    33 0000004F 58                      			pop				rax
    34 00000050 BA00000000              			mov				rdx,0					;move a 0 into rdx
    35 00000055 48F7FB                  			idiv				rbx					;multiply the two register
    36 00000058 50                      			push				rax
    37 00000059 8F0425[10000000]        			pop				qword [E]				;print assignments
    38 00000060 FF3425[00000000]        			push			qword [A]				;print identifiers
    39 00000067 48BF-                   			mov				rdi,_INT_
    39 00000069 [0000000000000000] 
    40 00000071 5E                      			pop				rsi
    41 00000072 B800000000              			mov				rax,0
    42 00000077 E8(00000000)            			call			printf
    43 0000007C 48BF-                   			mov				rdi,_STR_
    43 0000007E [0300000000000000] 
    44 00000086 48BE-                   			mov				rsi,_CRLF_
    44 00000088 [0600000000000000] 
    45 00000090 B800000000              			mov				rax,0
    46 00000095 E8(00000000)            			call			printf
    47 0000009A FF3425[08000000]        			push			qword [B]				;print identifiers
    48 000000A1 48BF-                   			mov				rdi,_INT_
    48 000000A3 [0000000000000000] 
    49 000000AB 5E                      			pop				rsi
    50 000000AC B800000000              			mov				rax,0
    51 000000B1 E8(00000000)            			call			printf
    52 000000B6 48BF-                   			mov				rdi,_STR_
    52 000000B8 [0300000000000000] 
    53 000000C0 48BE-                   			mov				rsi,_CRLF_
    53 000000C2 [0600000000000000] 
    54 000000CA B800000000              			mov				rax,0
    55 000000CF E8(00000000)            			call			printf
    56 000000D4 FF3425[10000000]        			push			qword [E]				;print identifiers
    57 000000DB 48BF-                   			mov				rdi,_INT_
    57 000000DD [0000000000000000] 
    58 000000E5 5E                      			pop				rsi
    59 000000E6 B800000000              			mov				rax,0
    60 000000EB E8(00000000)            			call			printf
    61 000000F0 48BF-                   			mov				rdi,_STR_
    61 000000F2 [0300000000000000] 
    62 000000FA 48BE-                   			mov				rsi,_CRLF_
    62 000000FC [0600000000000000] 
    63 00000104 B800000000              			mov				rax,0
    64 00000109 E8(00000000)            			call			printf
    65 0000010E 4889EC                  			mov				rsp,rbp
    66 00000111 5D                      			pop				rbp
    67 00000112 B800000000              			mov				rax,0
    68 00000117 C3                      			ret
    69                                   
    70                                  ;BSS Section
    71                                   
    72                                  			section				.bss
    73                                   
    74 00000000 <res 00000008>          A:			resq			1
    75 00000008 <res 00000008>          B:			resq			1
    76 00000010 <res 00000008>          E:			resq			1
    77 00000018 <res 00000008>          D:			resq			1
    78                                   
    79                                  ;DATA Section
    80                                   
    81                                  			section				.data
    82 00000000 256900                  _INT_    :	db					"%i",0x0
    83 00000003 257300                  _STR_    :	db					"%s",0x0
    84 00000006 0A00                    _CRLF_   :	db					0xa,0x0
    85                                   
